% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSpatialization.R
\name{makeSpatialization}
\alias{makeSpatialization}
\title{spatialize a gridded dataset using a mlr model}
\usage{
makeSpatialization(model, pred.grid = grid.df)
}
\arguments{
\item{model}{an object of class mlr::train() that contains the prediction model}

\item{pred.grid}{an object of class sf::st_makegrid(). This object must contains the same column names as the task on which the model has been trained}
}
\value{
a 2 elements named list : (1) snitch and (2) output. snitch is TRUE if function has provided the expected result. output is a named list which contains
(1) value : an object of class list where first element is a data.frame containing the spatialized data and the second element is a data.frame containing the summary data
(2) condition : a character specifying if the functions has encountered success, warning, error
(3) message : the message relative to the condition
}
\examples{
# create the dataset
myDataset = makeDataset(
  dfrom = "2017-03-04T15:00:00Z",
  dto = "2017-03-04T15:00:00Z",
  sensor = "tsa")

# extract a single hour of the dataset
myDataset = myDataset$output$value

# create the tasks
tasks = purrr::map(dataset, makeTask, target = "tsa")

# extract the required part of the tasks
tasks = tasks \%>\% purrr::modify_depth(1, ~.$"output"$"value"$"task")

# show 1 task
myTask = tasks[[1]]

# create the model
myModel = makeModel(
  task = myTask,
  learner = agrometeorLearners$mulLR_lonLatAlt_NA)

# extract the relevant information
myModel = myModel$output$value

# spatialize using the trained model
mySpatialization = makeSpatialization(model = myModel$trained)

# get the relevant information
mySpatialization = mySpatialization$output$value

# show an excerpt
head(mySpatialization)
}
\author{
Thomas Goossens
}
