% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSpatialization.R
\name{makeSpatialization}
\alias{makeSpatialization}
\title{make a spatialization of a gridded dataset using a mlr model}
\usage{
makeSpatialization(model, pred.grid = grid.df)
}
\arguments{
\item{model}{an object of class mlr::train() that contains the prediction model}

\item{pred.grid}{an object of class sf::st_makegrid(). This object must contains the same column names as the task on which the model has been trained}
}
\value{
A 2 elements named list
\itemize{
  \item \code{snitch} : a boolean. Is \code{TRUE} if function has provided the expected result. Is \code{FALSE} is function throws an error
  \item \code{output} : a named list which elements are :\itemize{
    \item \code{value} : a named list which elements are : \itemize{
      \item \code{spatialized} : an element of class \code{data.frame}. colnames are \code{px} (= reference of the pixel), \code{response} (= prediction value), \code{se} (= prediction standard error)
      \item \code{summary} an element of class \code{data.frame} containing summary information about grid prediction. colnames are \code{min.response}, \code{max.response}, \code{mean.response}, \code{min.se}, \code{max.se}, \code{mean.se}
     }
      \item \code{condition} : a character specifying the condition encountered by the function: success, warning, or error.
      \item \code{message} : a character specifying the message relative to the condition.
    }
 }
}
\description{
make a spatialization of a gridded dataset using a mlr model
}
\examples{
\dontrun{
# load magrittr for pipe use : \%>\%
library(magrittr)
# create the dataset
myDataset = makeDataset(
  dfrom = "2017-03-04T15:00:00Z",
  dto = "2017-03-04T18:00:00Z",
  sensor = "tsa")

# extract the list of hourly sets of records
myDataset = myDataset$output$value

# create the tasks
myTasks = purrr::map(myDataset, makeTask, target = "tsa")

# extract the tasks from the outputs
myTasks = myTasks \%>\% purrr::modify_depth(1, ~.$"output"$"value"$"task")

# keep the first task
myTask = myTasks[[1]]

# create the model
myModel = makeModel(
  task = myTask,
  learner = agrometeorLearners$mulLR_lonLatAlt_NA)

# extract the relevant information
myModel = myModel$output$value

# spatialize using the trained model
mySpatialization = makeSpatialization(
model = myModel$trained,
pred.grid = grid.df) # grid.df comes precompiled with the package

# get the relevant information
mySpatialization = mySpatialization$output$value

# show an excerpt of the spatialized data
head(mySpatialization$spatialized)

# show the summary stats of spatialized data
head(mySpatialization$summary)
}
}
\author{
Thomas Goossens
}
